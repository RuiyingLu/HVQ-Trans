[2023-05-24 21:56:44,630][   train_val.py][line:  63][    INFO] args: Namespace(config='./config.yaml', evaluate=False, local_rank='0', train_only_four_decoder=False)
[2023-05-24 21:56:44,632][   train_val.py][line:  64][    INFO] config: {'criterion': [{'kwargs': {'weight': 1.0},
                'name': 'FeatureMSELoss',
                'type': 'FeatureMSELoss'}],
 'dataset': {'batch_size': 16,
             'image_reader': {'kwargs': {'color_mode': 'RGB',
                                         'image_dir': '../../data/MVTec-AD/mvtec_anomaly_detection/'},
                              'type': 'opencv'},
             'input_size': [224, 224],
             'pixel_mean': [0.485, 0.456, 0.406],
             'pixel_std': [0.229, 0.224, 0.225],
             'test': {'meta_file': '../../data/MVTec-AD/test.json'},
             'train': {'hflip': False,
                       'meta_file': '../../data/MVTec-AD/train.json',
                       'rebalance': False,
                       'rotate': False,
                       'vflip': False},
             'type': 'custom',
             'workers': 4},
 'evaluator': {'eval_dir': './result_eval_temp',
               'key_metric': 'mean_max_auc',
               'metrics': {'auc': [{'name': 'std'},
                                   {'kwargs': {'avgpool_size': [16, 16]},
                                    'name': 'max'},
                                   {'name': 'pixel'}]},
               'save_dir': 'result_eval_temp',
               'vis_compound': {'max_score': None,
                                'min_score': None,
                                'save_dir': 'checkpoints/HVQ_TR_switch/vis_compound_HVQ_TR_switch/visual'}},
 'exp_path': '.',
 'frozen_layers': ['backbone'],
 'log_path': './log/',
 'port': 11111,
 'random_seed': 133,
 'save_path': './checkpoints/HVQ_TR_switch',
 'saver': {'always_save': False,
           'auto_resume': False,
           'load_path': 'checkpoints',
           'log_dir': 'log/',
           'save_dir': 'checkpoints/HVQ_TR_switch'},
 'trainer': {'clip_max_norm': 0.1,
             'lr_scheduler': {'kwargs': {'gamma': 0.1, 'step_size': 800},
                              'type': 'StepLR'},
             'max_epoch': 1000,
             'optimizer': {'kwargs': {'betas': [0.9, 0.999],
                                      'lr': 0.0001,
                                      'weight_decay': 0.0001},
                           'type': 'AdamW'},
             'print_freq_step': 80,
             'tb_freq_step': 1,
             'val_freq_epoch': 10},
 'version': 'v1.0.0'}
[2023-05-24 21:56:45,291][       utils.py][line: 719][    INFO]  not exist, load from https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b4-6ed6700e.pth
[2023-05-24 21:56:45,461][       utils.py][line: 740][    INFO] Loaded ImageNet pretrained efficientnet-b4
